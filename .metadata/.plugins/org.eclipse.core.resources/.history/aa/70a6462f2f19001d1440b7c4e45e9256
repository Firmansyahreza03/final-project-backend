package com.lawencon.community.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.lawencon.community.dao.CommunityCategoryDao;
import com.lawencon.community.dao.CommunityDao;
import com.lawencon.community.dao.MemberCommunityDao;
import com.lawencon.community.dao.PaymentTransactionDao;
import com.lawencon.community.dao.ProfileDao;
import com.lawencon.community.model.Community;
import com.lawencon.community.model.CommunityCategory;
import com.lawencon.community.model.MemberCommunity;
import com.lawencon.community.model.PaymentTransaction;
import com.lawencon.community.model.Profile;
import com.lawencon.community.pojo.report.PojoLimitTimeReq;
import com.lawencon.community.pojo.report.PojoReportPaymentByCommunityRes;
import com.lawencon.community.pojo.report.PojoReportUserByCommunityRes;
import com.lawencon.model.SearchQuery;

@Service
public class ReportService {
	@Autowired
	private MemberCommunityDao memberCommunityDao;
	@Autowired
	private ProfileDao profileDao;
	@Autowired
	private CommunityDao communityDao;
	@Autowired
	private CommunityCategoryDao communityCategoryDao;
	@Autowired
	private PaymentTransactionDao paymentDao;

	public SearchQuery<PojoReportUserByCommunityRes> userReport(PojoLimitTimeReq dataReq) throws Exception {
		List<MemberCommunity> res = memberCommunityDao.findByPeriode(dataReq.getStartAt(), dataReq.getEndAt());
		List<PojoReportUserByCommunityRes> resultList = new ArrayList<>();

		res.forEach(d -> {
			PojoReportUserByCommunityRes data = new PojoReportUserByCommunityRes();
			Profile fkProfile = profileDao.getByUserId(d.getUser().getId());
			Community fkCommunity = communityDao.getById(d.getCommunity().getId());
			CommunityCategory fkCategory = communityCategoryDao.getById(fkCommunity.getCategory().getId());
			
			data.setNameUser(fkProfile.getFullName());
			data.setTitle(fkCommunity.getCommunityTitle());
			data.setLocation(fkCommunity.getCommunityLocation());
			data.setType(fkCategory.getCategoryName());

			data.setStartDate(fkCommunity.getCommunityStartAt());
			data.setEndDate(fkCommunity.getCommunityEndAt());

			resultList.add(data);
		});

		SearchQuery<PojoReportUserByCommunityRes> result = new SearchQuery<PojoReportUserByCommunityRes>();
		result.setData(resultList);
		result.setCount(resultList.size());
		return result;
	}

	public SearchQuery<PojoReportPaymentByCommunityRes> paymentReport(PojoLimitTimeReq dataReq) throws Exception {
		List<MemberCommunity> res = memberCommunityDao.findByPeriode(dataReq.getStartAt(), dataReq.getEndAt());
		List<PojoReportPaymentByCommunityRes> resultList = new ArrayList<>();

		res.forEach(d -> {
			PojoReportPaymentByCommunityRes data = new PojoReportPaymentByCommunityRes();
			PaymentTransaction fkPayment = paymentDao.getById(d.getPayment().getId());
			Community fkCommunity = communityDao.getById(d.getCommunity().getId());
			CommunityCategory fkCategory = communityCategoryDao.getById(fkCommunity.getCategory().getId());
			
			data.setIsAcc(fkPayment.getIsAcc());

			data.setCode(fkPayment.getCode());
			data.setDesc(fkPayment.getDesc());
			data.setIncome(fkPayment.getPrice());

			data.setTitle(fkCommunity.getCommunityTitle());
			data.setType(fkCategory.getCategoryName());
			data.setStartDate(fkCommunity.getCommunityStartAt());
			data.setEndDate(fkCommunity.getCommunityEndAt());

			resultList.add(data);
		});

		SearchQuery<PojoReportPaymentByCommunityRes> result = new SearchQuery<PojoReportPaymentByCommunityRes>();
		result.setData(resultList);
		result.setCount(resultList.size());
		return result;
	}
}
